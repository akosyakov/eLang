grammar ch.vorburger.el.EL with org.eclipse.xtext.xbase.Xbase

import "http://www.eclipse.org/xtext/xbase/Xbase"
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate eL "http://www.vorburger.ch/el/EL"

XExpression returns XExpression :
	XOrExpression;

XPrimaryExpression returns XExpression:
	XFeatureCall |
	XLiteral |
	XIfExpression |
	XParenthesizedExpression;

// let's overwrite this to get rid of the "instanceof" function
XRelationalExpression returns XExpression:
	XOtherOperatorExpression
	(=>({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare]) rightOperand=XOtherOperatorExpression)*;

// let's overwrite this to get rid of the "->" function
XOtherOperatorExpression returns XExpression:
	XAdditiveExpression (=>({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	rightOperand=XAdditiveExpression)*;

OpOther:
	'..';

XLiteral returns XExpression:
  XBooleanLiteral |
  XNullLiteral |
  XStringLiteral |
  DecimalLiteral |
  DateLiteral |
  DateTimeLiteral;

DateLiteral:
	{DateLiteral} value=Date;

DateTimeLiteral:
	{DateTimeLiteral} value=Date_Time;	

DecimalLiteral:
  {DecimalLiteral} value=Number;

XNullLiteral returns XExpression :
	{XNullLiteral} ('null' | 'NULL');
	
XBooleanLiteral returns XExpression :
	{XBooleanLiteral} (('false' | 'FALSE') | isTrue?=('true' | 'TRUE'));	

Date:
	INT'.'INT'.'INT;

Date_Time:
	Date INT ':' INT ':' INT;

Number: 
	(INT '.')? (INT|EINT);
 
terminal EINT returns ecore::EInt: ('0'..'9')+ ('e'|'E') ('-'|'+')? ('0'..'9')+;
